{"version":3,"file":"options.js","sourceRoot":"","sources":["../src/options.ts"],"names":[],"mappings":"","sourcesContent":["import { LogLevel } from './logger';\nimport { Transport } from './transport';\nimport { RetryClass } from './retry';\n\n/**\n * Options that you can choose to configure against the client.\n */\nexport interface Options {\n  /**\n   * Whether or not the SDK should be started in debug mode.\n   * This will enable the SDK to generate logs at WARN level or above, if the\n   * logLevel is not specified.\n   */\n  debug: boolean;\n\n  /**\n   * Configuration of the logging verbosity of the SDK.\n   * 0 = NONE: No Logs will be surfaced.\n   * 1 = ERROR: SDK internal errors will be generated.\n   * 2 = WARN: Warnings will be generated around dangerous/deprecated features.\n   * 3 = VERBOSE: All SDK actions will be logged.\n   */\n  logLevel: LogLevel;\n\n  /** The maximum events in the buffer */\n  maxCachedEvents: number;\n\n  /** The maximum number of times a server will attempt to retry  */\n  maxRetries: number;\n\n  /**\n   * Whether you opt out from sending events.\n   */\n  optOut: boolean;\n\n  /**\n   * The class being used to handle event retrying.\n   */\n  retryClass: RetryClass | null;\n\n  /**\n   * The class being used to transport events.\n   */\n  transportClass: Transport | null;\n\n  /** If you're using a proxy server, set its url here. */\n  serverUrl: string;\n\n  /** The events upload interval */\n  uploadIntervalInSec: number;\n}\n"]}