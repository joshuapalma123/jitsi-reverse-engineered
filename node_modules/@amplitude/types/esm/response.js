import { Status } from './status';
export var mapJSONToResponse = function (json) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
    if (typeof json !== 'object') {
        return null;
    }
    var status = Status.fromHttpCode(json.code);
    var statusCode = json.code;
    switch (status) {
        case Status.Success:
            return {
                status: status,
                statusCode: statusCode,
                body: {
                    eventsIngested: json.events_ingested,
                    payloadSizeBytes: json.payload_size_bytes,
                    serverUploadTime: json.server_upload_time,
                },
            };
        case Status.Invalid:
            return {
                status: status,
                statusCode: statusCode,
                body: {
                    error: (_a = json.error) !== null && _a !== void 0 ? _a : '',
                    missingField: (_b = json.missing_field) !== null && _b !== void 0 ? _b : null,
                    eventsWithInvalidFields: (_c = json.events_with_invalid_fields) !== null && _c !== void 0 ? _c : {},
                    eventsWithMissingFields: (_d = json.events_with_missing_fields) !== null && _d !== void 0 ? _d : {},
                },
            };
        case Status.PayloadTooLarge:
            return {
                status: status,
                statusCode: statusCode,
                body: {
                    error: (_e = json.error) !== null && _e !== void 0 ? _e : '',
                },
            };
        case Status.RateLimit:
            return {
                status: status,
                statusCode: statusCode,
                body: {
                    error: (_f = json.error) !== null && _f !== void 0 ? _f : '',
                    epsThreshold: json.eps_threshold,
                    throttledDevices: (_g = json.throttled_devices) !== null && _g !== void 0 ? _g : {},
                    throttledUsers: (_h = json.throttled_users) !== null && _h !== void 0 ? _h : {},
                    exceededDailyQuotaDevices: (_j = json.exceeded_daily_quota_devices) !== null && _j !== void 0 ? _j : {},
                    exceededDailyQuotaUsers: (_k = json.exceeded_daily_quota_users) !== null && _k !== void 0 ? _k : {},
                    throttledEvents: (_l = json.throttled_events) !== null && _l !== void 0 ? _l : [],
                },
            };
        default:
            return {
                status: status,
                statusCode: statusCode,
            };
    }
};
export var mapHttpMessageToResponse = function (httpRes) {
    var statusCode = httpRes.statusCode === undefined ? 0 : httpRes.statusCode;
    var status = Status.fromHttpCode(statusCode);
    return {
        status: status,
        statusCode: statusCode,
    };
};
//# sourceMappingURL=response.js.map